"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_typeof=require("@babel/runtime/helpers/typeof");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")),_react=_interopRequireWildcard(require("react")),_reactSelect=_interopRequireDefault(require("react-select")),_InputLabel=_interopRequireDefault(require("../FormElements/InputLabel")),_countryList=require("country-list"),_excluded=["field","value","validationMessage","touched","setTouched","hideField","updateForm","styledComponents","error","unsetError","setFocusClass","cssClass","language"];function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!==_typeof(a)&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!=f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d["default"]=a,c&&c.set(a,d),d}var _default=function(a){var b=a.field,c=a.value,d=a.validationMessage,e=a.touched,f=a.setTouched,g=a.hideField,h=a.updateForm,i=a.styledComponents,j=a.error,k=a.unsetError,l=a.setFocusClass,m=a.cssClass,n=a.language,o=(0,_objectWithoutProperties2["default"])(a,_excluded),p=b.id,q=b.formId,r=b.type,s=b.label,t=b.placeholder,u=b.isRequired,v=b.inputs,w=b.maxLength,x=b.description,y=b.descriptionPlacement,z=b.labelPlacement,A=b.width,B=b.customName,C=(0,_react.useState)((0,_countryList.getNames)()),D=(0,_slicedToArray2["default"])(C,2),E=D[0],F=D[1],G=i||!1,H=G.Input,I=void 0===H?"input":H,J=G.Label,K=void 0===J?"label":J,L=G.Box,M=void 0===L?"div":L,N=G.ReactSelect,O=N||_reactSelect["default"],P=function(a){var c=a&&a.target?a:{target:{value:a}};h(c,b)};return _react["default"].createElement(M,{width:A,className:d&&e||j?"form-field form-field--address error ".concat(m):"form-field form-field--address ".concat(m),style:{display:g?"none":void 0}},null===v||void 0===v?void 0:v.map(function(a,g){return!a.isHidden&&_react["default"].createElement("div",{className:r,key:a.id},_react["default"].createElement(_InputLabel["default"],{formId:q,id:a.id,label:a.label,labelPlacement:z,isRequired:u,styledComponent:i}),"above"===y&&x&&_react["default"].createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:x}}),5===g&&E?_react["default"].createElement(O,{onChange:function onChange(b){P(b),k(a.id)},onBlur:function onBlur(d){h(d,b),f(a.id),l(""!==c)},onFocus:function onFocus(){return l(!0)},options:E.map(function(a){return{label:a,value:a}})},E.map(function(a){return _react["default"].createElement("option",{value:a},a)})):_react["default"].createElement(I,{id:"input_".concat(q,"_").concat(a.id),key:a.id,name:B||"input_".concat(a.id),type:r,value:c?c[a.id]:"",placeholder:a.placeholder,maxLength:w,required:u,onChange:function onChange(c){h(c,b,a.id),k(a.id)},onBlur:function onBlur(d){h(d,b),f(a.id),l(""!==c)},onFocus:function onFocus(){return l(!0)},"aria-label":a.label,"aria-describedby":"error_".concat(q,"_").concat(a.id),"aria-invalid":!!d&&e||!!j}),"above"!==y&&x&&_react["default"].createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:x}}),(d&&e||j)&&_react["default"].createElement("span",{className:"error-message",id:"error_".concat(q,"_").concat(p)},d||j))}))};exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,