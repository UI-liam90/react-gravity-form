"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")),_react=_interopRequireDefault(require("react")),_reactSelect=_interopRequireDefault(require("react-select")),_ValidationMessage=_interopRequireDefault(require("../../FormElements/ValidationMessage"));function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2["default"])(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var _default=function(a){var b=a.defaultProps,c=b.field,d=b.value,e=b.validationMessage,f=b.touched,g=b.setTouched,h=b.updateForm,i=b.error,j=b.unsetError,k=b.setFocusClass,l=b.setDate,m=b.startDate,n=b.styledComponents,o=b.formattedInputs,p=(0,_objectWithoutProperties2["default"])(b,["field","value","validationMessage","touched","setTouched","updateForm","error","unsetError","setFocusClass","setDate","startDate","styledComponents","formattedInputs"]),q=c.id,r=c.isRequired,s=c.formId,t=c.type,u=c.customName,v=_reactSelect["default"]||"select",w=function(a){for(var b=[],c=0,d=1,e=a===c||a===d?1:1920,f=a===c?31:a===d?12:new Date().getFullYear(),g=a===c?1:a===d?3:0,h=e<f?1:-1,i=e;i!==f+h;i+=h)b.push({value:i,label:i,selected:parseInt(i)===parseInt(g)});return b},x=function(a,b,c){var d=m||[],e=0===c?2:2===c?0:1;d[e]=a.value,l(d);var f={target:{value:a.value}};h(f,b)},y=function(a){if(m){var b=0===a?2:1===a?1:0;return m[b]?{value:m[b],label:m[b]}:void 0}};return _react["default"].createElement(_react["default"].Fragment,null,o&&o.map(function(a,b){return _react["default"].createElement("div",{key:a.id,className:"gfield_date_dropdown"},_react["default"].createElement(v,{required:r,placeholder:a.placeholder,options:w(b),value:y(b),id:"input_".concat(s,"_").concat(q,"_").concat(b+1),name:u||"input_".concat(q,"[]"),onBlur:function onBlur(){var d=y(b);if(!d){var e=_objectSpread(_objectSpread({},c),{},{subId:b,dateLabel:a.label});x({value:""},e,b)}g(q),j(q),k(""!==a.value)},onChange:function onChange(d){var e=_objectSpread(_objectSpread({},c),{},{subId:b,dateLabel:a.label});x(d,e,b),j(q)},onFocus:function onFocus(){return k(!0)}}))}),(e&&f||i)&&_react["default"].createElement(_ValidationMessage["default"],{validationMessage:e,error:i,id:q}))};exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,