"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_isomorphicUnfetch=_interopRequireDefault(require("isomorphic-unfetch")),_index=require("./index"),_validation=require("../validation"),_checkConditionalLogic=_interopRequireDefault(require("./checkConditionalLogic"));function _createForOfIteratorHelper(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(!c){if(Array.isArray(a)||(c=_unsupportedIterableToArray(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0,e=function(){};return{s:e,n:function n(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}},e:function e(a){throw a},f:e}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f,g=!0,h=!1;return{s:function s(){c=c.call(a)},n:function n(){var a=c.next();return g=a.done,a},e:function e(a){h=!0,f=a},f:function f(){try{g||null==c["return"]||c["return"]()}finally{if(h)throw f}}}}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function fetchForm(){return _fetchForm.apply(this,arguments)}function _fetchForm(){return _fetchForm=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function b(a){var c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H;return _regenerator["default"].wrap(function(b){for(;;)switch(b.prev=b.next){case 0:return c=a.initialPage,d=a.fetchOptions,e=a.setFormData,f=a.setFormValues,g=a.setActivePage,h=a.setConditionFields,j=a.setConditionalIds,k=a.setPages,l=a.setIsMultiPart,m=a.populatedFields,n=a.populatedEntry,o=a.getParams,p=a.backendUrl,q=a.formID,r=!1,s=o?Object.keys(o).map(function(a){return"".concat(a,"=").concat(o[a])}).join("&"):"",t="".concat(p,"/").concat(q).concat(s?"?".concat(s):""),b.next=6,(0,_isomorphicUnfetch["default"])(t,d).then(function(a){return a.json()}).then(function(a){return a})["catch"](function(){return!1});case 6:if(u=b.sent,u){v={},w=[],x=[],y=[],z=_createForOfIteratorHelper(u.fields);try{for(z.s();!(A=z.n()).done;){if(B=A.value,C=void 0,"page"===B.type&&y.push(B.id),C=(0,_index.getFieldPrepopulatedValue)(B,m,n),"fileupload"===B.type&&(r=!0),B.conditionalLogic){for(D={id:B.id,conditionalLogic:B.conditionalLogic},E=B.conditionalLogic.rules.map(function(a){return a.fieldId}),F=0;F<E.length;F++)G=parseInt(E[F]),-1===x.indexOf(G)&&x.push(G);w.push(D)}v[B.id]={valid:(0,_validation.validateField)(C,B),value:C,label:B.label,pageNumber:B.pageNumber,cssClass:B.cssClass,isRequired:B.isRequired,type:B.type,inputName:B.inputName}}}catch(a){z.e(a)}finally{z.f()}for(H=0;H<w.length;H++)v[w[H].id].hideField=(0,_checkConditionalLogic["default"])(w[H].conditionalLogic,v);e(u),f(v),g(c||!!u.pagination&&1),h(w),j(x),r&&l(r),!y.length||k(y)}case 8:case"end":return b.stop()}},b)})),_fetchForm.apply(this,arguments)}var _default=fetchForm;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,