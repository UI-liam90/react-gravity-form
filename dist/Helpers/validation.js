"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.validateField=exports.selectValidation=exports.isUrl=exports.isRequired=exports.isEmpty=exports.isEmail=exports.checkboxValidation=void 0;var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof")),getMessage=function(a,b){return!!b&&(a&&"object"===(0,_typeof2["default"])(a)&&a.custom?a.custom:a&&"object"===(0,_typeof2["default"])(a)&&a[b]?a[b]:a)},isEmail=function(a,b,c){if(!/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(a)){var d=getMessage(c,"email");return d||"Enter a valid email"}return!1};exports.isEmail=isEmail;var isUrl=function(a,b,c){if(!/^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%_.~+]*)*(\?[;&a-z\d%_.~+=-]*)?(\#[-a-z\d_]*)?$/i.test(a)){var d=getMessage(c,"url");return d||"Enter a valid url"}return!1};exports.isUrl=isUrl;var isEmpty=function(a){return!a};exports.isEmpty=isEmpty;var isRequired=function(a,b,c){if(a&&b){var d=getMessage(c,"required");return d||"This field is required"}return!1};exports.isRequired=isRequired;var selectValidation=function(a,b,c){return!(b===c&&a)};exports.selectValidation=selectValidation;var checkboxValidation=function(a,b){return!!(1>a.length)&&(b||"This field is required")};exports.checkboxValidation=checkboxValidation;var emailValidation=function(a,b){var c=b||!1,d=c.inputs,e=c.isRequired,f=c.errorMessage,g=f||!1,h=g.required,j=g.mismatch,k=a&&a.filter(function(a){return a&&""===a.val}).length;if((a&&2>a.length||0!==k)&&e)return h||"This field is required";if(a&&0<a.length)for(var l,m=0;a.length>m;m++)if(l=isEmail(a[m].val),l)return l;return!!(a&&2===a.length&&d&&2===d.length&&a[1]&&a[0]&&""!==a[1].val&&a[1].val!==a[0].val)&&(j||"Mismatch")},passwordValidation=function(a,b){var c=b||!1,d=c.inputs,e=c.isRequired,f=c.errorMessage,g=f||!1,h=g.required,i=g.mismatch,j=d.filter(function(a){return!a.isHidden}),k=a&&a.filter(function(a){return a&&""===a.val}).length;return(a&&0===a.length||k===j.length)&&e?h||"This field is required":!!(a&&2===a.length&&j&&2===j.length&&a[1]&&a[0]&&""!==a[1].val&&a[1].val!==a[0].val)&&(i||"Mismatch")},isPostcode=function(a,b,c){if(!/^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i.test(a)){var d=getMessage(c,"email");return d||"Enter a valid postcode"}return!1},isDate=function(a,b){for(var c=[],d=0;d<a.length;d++)if(a[d]){var e=a[d],f=e.val,g=e.label;if(f)if("MM"===g){var h=b.errorMessage.month,j=12,k=1,l=2;(f.length>l||f<k||f>j)&&(c[d]={index:d,message:getMessage(h,"date")||"Enter a valid month"})}else if("DD"===g){var m=b.errorMessage.date,n=31,o=1,p=2;(f.length>p||f<o||f>n)&&(c[d]={index:d,message:getMessage(m,"date")||"Enter a valid date"})}else if("YYYY"===g){var q=b.errorMessage.year,r=new Date().getFullYear()+1,s=1920,t=4;(f.length>t||f<s||f>r)&&(c[d]={index:d,message:getMessage(q,"date")||"Enter a valid year"})}}return c},validateField=function(a,b){var c=b.type,d=b.isRequired;if(("checkbox"===c||"radio"===c)&&d)return checkboxValidation(a,b.errorMessage);if("password"===c)return passwordValidation(a,b);if("email"===c&&b.emailConfirmEnabled)return emailValidation(a,b);var e=isEmpty(a),f="",g=!!(b&&b.errorMessage)&&b.errorMessage;if(f=!!d&&isRequired(d,e,g),!f&&!e)if("email"===c)f=isEmail(a,b,g);else if("website"===c)f=isUrl(a,b,g);else if("date"===c){var h=!0;h=b.dateType&&"datepicker"===b.dateType?!!d&&isRequired(d,e,g):isDate(a,b),f=!!(0<h.length)&&h}else"postcode"===c&&(f=isPostcode(a,b,g));return f};exports.validateField=validateField;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,