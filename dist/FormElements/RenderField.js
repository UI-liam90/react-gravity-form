"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_typeof=require("@babel/runtime/helpers/typeof");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")),_react=_interopRequireWildcard(require("react")),FormFields=_interopRequireWildcard(require("../Fields")),_uuid=require("uuid"),_excluded=["field","formValues","submitFailed","submitSuccess","setTouched","setErrorMessages","touched","updateForm","pages","prevStep","nextStep","isNextDisabled","saveStateToHtmlField","styledComponents","customComponents","error","unsetError","dropzoneText","language","apiKeys","errors"];function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!==_typeof(a)&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!=f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d["default"]=a,c&&c.set(a,d),d}var frac2dec=function(a){var b=a.split("-");if(1===b.length&&(b=a.split(" ")),1<b.length&&-1!==a.indexOf("/")){var c=parseInt(b[0]),d=b[1].split("/"),e=parseInt(d[0])/parseInt(d[1]);return c+e}if(-1!==a.indexOf("/")){var f=a.split("/"),g=parseInt(f[0])/parseInt(f[1]);return g}return parseInt(a)},formatComponentName=function(a){return a.charAt(0).toUpperCase()+a.slice(1)},formatWidthFromCss=function(a){if(!a)return{};var b=a.indexOf("["),c=a.indexOf("]");if(-1===b||-1===c)return{};var d=a.substring(b+1,c).split(",").map(function(a){return frac2dec(a.replace(/\s/g,""))}),e="".concat(a.replace(a.substring(b,c+1),"")," custom-width");return{width:d,cleanedCssClass:e}},RenderField=function(a){var b=a.field,c=a.formValues,d=a.submitFailed,e=a.submitSuccess,f=a.setTouched,g=a.setErrorMessages,h=a.touched,i=a.updateForm,j=a.pages,k=a.prevStep,l=a.nextStep,m=a.isNextDisabled,n=a.saveStateToHtmlField,o=a.styledComponents,p=a.customComponents,q=a.error,r=a.unsetError,s=a.dropzoneText,t=a.language,u=a.apiKeys,v=a.errors,w=(0,_objectWithoutProperties2["default"])(a,_excluded),x=FormFields[formatComponentName(b.type)];p&&(p[b.id]||p[b.cssClass]||p[b.inputName])&&(x=FormFields[formatComponentName("custom")]);var y=formatWidthFromCss(b.cssClass),z=y.cleanedCssClass,A=y.width;A&&(b.cssClass=z,b.width=A);var B=c[b.id]?c[b.id].value:b.defaultValue,C=(0,_react.useState)("".concat(b.cssClass).concat("select"===b.type?B.value&&""!==B.value?" filled":"":B&&""!==B?" filled":"")),D=(0,_slicedToArray2["default"])(C,2),E=D[0],F=D[1];return _react["default"].createElement(x,(0,_extends2["default"])({key:(0,_uuid.v4)(),field:b,value:B,updateForm:function updateForm(a,b,c){return i(a,b,c)},validationMessage:!!c[b.id]&&c[b.id].valid,formValues:c,submitFailed:d,submitSuccess:e,touched:h[b.id],setTouched:f,setErrorMessages:g,unsetError:r,error:q,pages:j,prevStep:k,nextStep:l,isNextDisabled:m,hideField:!!c[b.id]&&c[b.id].hideField,saveStateToHtmlField:!("html"!==b.type||-1===b.cssClass.indexOf("set-state"))&&{formValues:c,saveStateToHtmlField:n},styledComponents:o,cssClass:E,setFocusClass:function setFocusClass(a){a?-1===E.indexOf(" filled")&&F("".concat(E," filled")):F(E.replace(" filled",""))},component:p&&(p[b.id]||p[b.cssClass]||p[b.inputName]),dropzoneText:s,language:t,apiKeys:u,errors:v},w))},_default=RenderField;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,